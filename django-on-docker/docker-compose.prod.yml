version: '3.8'

services:
  web:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: gunicorn hello_django.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8000
    env_file:
      - .env.prod
    depends_on:
      - db
  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.enviroment/enviroment.prod.env

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - 1337:80
    depends_on:
      - web
  pg_admin:
    image: dpage/pgadmin4
    env_file:
      - .enviroment/enviroment.prod.env
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - "5050:80"
  db_mysql:
    image: mysql:5.7
    env_file:
      - .enviroment/enviroment.prod.env
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - "6033:3306"
    volumes:
      - dbdata:/var/lib/mysql
  db_server:
    image: "mcr.microsoft.com/mssql/server"
    env_file:
      - .enviroment/enviroment.prod.env
    ports:
      - "1433:1433"
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    links:
      - db_mysql
    env_file:
      - .enviroment/enviroment.prod.env
    restart: always

    deploy:
      mode: replicated
      replicas: 1

    ports:
      - "8081:80"
volumes:
  postgres_data:
  static_volume:
  media_volume:
  dbdata: